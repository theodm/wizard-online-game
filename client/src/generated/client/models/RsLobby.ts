/* tslint:disable */
/* eslint-disable */
/**
 * Play with friends
 * Play with friends
 *
 * The version of the OpenAPI document: 1.0
 * Contact: theo.dm94@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RsLobbySettings,
    RsLobbySettingsFromJSON,
    RsLobbySettingsFromJSONTyped,
    RsLobbySettingsToJSON,
} from './RsLobbySettings';
import {
    RsParticipant,
    RsParticipantFromJSON,
    RsParticipantFromJSONTyped,
    RsParticipantToJSON,
} from './RsParticipant';

/**
 * 
 * @export
 * @interface RsLobby
 */
export interface RsLobby {
    /**
     * 
     * @type {Date}
     * @memberof RsLobby
     */
    creationTime: Date;
    /**
     * 
     * @type {string}
     * @memberof RsLobby
     */
    lobbyID: string;
    /**
     * 
     * @type {RsParticipant}
     * @memberof RsLobby
     */
    host: RsParticipant;
    /**
     * 
     * @type {Array<RsParticipant>}
     * @memberof RsLobby
     */
    participants: Array<RsParticipant>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof RsLobby
     */
    participantsConnectivityInfo: { [key: string]: string; };
    /**
     * 
     * @type {boolean}
     * @memberof RsLobby
     */
    inGame: boolean;
    /**
     * 
     * @type {RsLobbySettings}
     * @memberof RsLobby
     */
    settings: RsLobbySettings;
}

/**
* @export
* @enum {string}
*/
export enum RsLobbyParticipantsConnectivityInfoEnum {
    Disconnected = 'DISCONNECTED',
    Active = 'ACTIVE',
    Inactive = 'INACTIVE'
}

export function RsLobbyFromJSON(json: any): RsLobby {
    return RsLobbyFromJSONTyped(json, false);
}

export function RsLobbyFromJSONTyped(json: any, ignoreDiscriminator: boolean): RsLobby {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'creationTime': (new Date(json['creationTime'])),
        'lobbyID': json['lobbyID'],
        'host': RsParticipantFromJSON(json['host']),
        'participants': ((json['participants'] as Array<any>).map(RsParticipantFromJSON)),
        'participantsConnectivityInfo': json['participantsConnectivityInfo'],
        'inGame': json['inGame'],
        'settings': RsLobbySettingsFromJSON(json['settings']),
    };
}

export function RsLobbyToJSON(value?: RsLobby | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'creationTime': (value.creationTime.toISOString()),
        'lobbyID': value.lobbyID,
        'host': RsParticipantToJSON(value.host),
        'participants': ((value.participants as Array<any>).map(RsParticipantToJSON)),
        'participantsConnectivityInfo': value.participantsConnectivityInfo,
        'inGame': value.inGame,
        'settings': RsLobbySettingsToJSON(value.settings),
    };
}

