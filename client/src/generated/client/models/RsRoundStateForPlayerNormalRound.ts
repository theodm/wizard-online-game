/* tslint:disable */
/* eslint-disable */
/**
 * Play with friends
 * Play with friends
 *
 * The version of the OpenAPI document: 1.0
 * Contact: theo.dm94@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RsCardInHand,
    RsCardInHandFromJSON,
    RsCardInHandFromJSONTyped,
    RsCardInHandToJSON,
} from './RsCardInHand';
import {
    RsParticipant,
    RsParticipantFromJSON,
    RsParticipantFromJSONTyped,
    RsParticipantToJSON,
} from './RsParticipant';
import {
    RsRoundStateForPlayer,
    RsRoundStateForPlayerFromJSON,
    RsRoundStateForPlayerFromJSONTyped,
    RsRoundStateForPlayerToJSON,
} from './RsRoundStateForPlayer';
import {
    RsRoundStateForPlayerNormalRoundAllOf,
    RsRoundStateForPlayerNormalRoundAllOfFromJSON,
    RsRoundStateForPlayerNormalRoundAllOfFromJSONTyped,
    RsRoundStateForPlayerNormalRoundAllOfToJSON,
} from './RsRoundStateForPlayerNormalRoundAllOf';
import {
    RsStich,
    RsStichFromJSON,
    RsStichFromJSONTyped,
    RsStichToJSON,
} from './RsStich';

/**
 * 
 * @export
 * @interface RsRoundStateForPlayerNormalRound
 */
export interface RsRoundStateForPlayerNormalRound extends RsRoundStateForPlayer {
    /**
     * 
     * @type {Array<RsCardInHand>}
     * @memberof RsRoundStateForPlayerNormalRound
     */
    ownCards: Array<RsCardInHand>;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof RsRoundStateForPlayerNormalRound
     */
    numberOfCardsInHandsOfPlayers: { [key: string]: number; };
}



export function RsRoundStateForPlayerNormalRoundFromJSON(json: any): RsRoundStateForPlayerNormalRound {
    return RsRoundStateForPlayerNormalRoundFromJSONTyped(json, false);
}

export function RsRoundStateForPlayerNormalRoundFromJSONTyped(json: any, ignoreDiscriminator: boolean): RsRoundStateForPlayerNormalRound {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...RsRoundStateForPlayerFromJSONTyped(json, ignoreDiscriminator),
        'ownCards': ((json['ownCards'] as Array<any>).map(RsCardInHandFromJSON)),
        'numberOfCardsInHandsOfPlayers': json['numberOfCardsInHandsOfPlayers'],
    };
}

export function RsRoundStateForPlayerNormalRoundToJSON(value?: RsRoundStateForPlayerNormalRound | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...RsRoundStateForPlayerToJSON(value),
        'ownCards': ((value.ownCards as Array<any>).map(RsCardInHandToJSON)),
        'numberOfCardsInHandsOfPlayers': value.numberOfCardsInHandsOfPlayers,
    };
}

