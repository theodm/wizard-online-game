/* tslint:disable */
/* eslint-disable */
/**
 * Play with friends
 * Play with friends
 *
 * The version of the OpenAPI document: 1.0
 * Contact: theo.dm94@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RsParticipant,
    RsParticipantFromJSON,
    RsParticipantFromJSONTyped,
    RsParticipantToJSON,
} from './RsParticipant';
import {
    RsWizardCard,
    RsWizardCardFromJSON,
    RsWizardCardFromJSONTyped,
    RsWizardCardToJSON,
} from './RsWizardCard';

/**
 * 
 * @export
 * @interface RsStich
 */
export interface RsStich {
    /**
     * 
     * @type {RsParticipant}
     * @memberof RsStich
     */
    startPlayer: RsParticipant;
    /**
     * 
     * @type {Array<RsWizardCard>}
     * @memberof RsStich
     */
    playedCards: Array<RsWizardCard>;
    /**
     * 
     * @type {{ [key: string]: RsWizardCard; }}
     * @memberof RsStich
     */
    cmpPlayerToCardMap: { [key: string]: RsWizardCard; };
    /**
     * 
     * @type {string}
     * @memberof RsStich
     */
    cmpCurrentStichColor: RsStichCmpCurrentStichColorEnum;
}

/**
* @export
* @enum {string}
*/
export enum RsStichCmpCurrentStichColorEnum {
    Any = 'Any',
    Red = 'Red',
    Yellow = 'Yellow',
    Green = 'Green',
    Blue = 'Blue'
}

export function RsStichFromJSON(json: any): RsStich {
    return RsStichFromJSONTyped(json, false);
}

export function RsStichFromJSONTyped(json: any, ignoreDiscriminator: boolean): RsStich {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startPlayer': RsParticipantFromJSON(json['startPlayer']),
        'playedCards': ((json['playedCards'] as Array<any>).map(RsWizardCardFromJSON)),
        'cmpPlayerToCardMap': (mapValues(json['cmpPlayerToCardMap'], RsWizardCardFromJSON)),
        'cmpCurrentStichColor': json['cmpCurrentStichColor'],
    };
}

export function RsStichToJSON(value?: RsStich | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startPlayer': RsParticipantToJSON(value.startPlayer),
        'playedCards': ((value.playedCards as Array<any>).map(RsWizardCardToJSON)),
        'cmpPlayerToCardMap': (mapValues(value.cmpPlayerToCardMap, RsWizardCardToJSON)),
        'cmpCurrentStichColor': value.cmpCurrentStichColor,
    };
}

