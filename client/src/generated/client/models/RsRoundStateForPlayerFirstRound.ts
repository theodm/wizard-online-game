/* tslint:disable */
/* eslint-disable */
/**
 * Play with friends
 * Play with friends
 *
 * The version of the OpenAPI document: 1.0
 * Contact: theo.dm94@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RsParticipant,
    RsParticipantFromJSON,
    RsParticipantFromJSONTyped,
    RsParticipantToJSON,
} from './RsParticipant';
import {
    RsRoundStateForPlayer,
    RsRoundStateForPlayerFromJSON,
    RsRoundStateForPlayerFromJSONTyped,
    RsRoundStateForPlayerToJSON,
} from './RsRoundStateForPlayer';
import {
    RsRoundStateForPlayerFirstRoundAllOf,
    RsRoundStateForPlayerFirstRoundAllOfFromJSON,
    RsRoundStateForPlayerFirstRoundAllOfFromJSONTyped,
    RsRoundStateForPlayerFirstRoundAllOfToJSON,
} from './RsRoundStateForPlayerFirstRoundAllOf';
import {
    RsStich,
    RsStichFromJSON,
    RsStichFromJSONTyped,
    RsStichToJSON,
} from './RsStich';
import {
    RsWizardCard,
    RsWizardCardFromJSON,
    RsWizardCardFromJSONTyped,
    RsWizardCardToJSON,
} from './RsWizardCard';

/**
 * 
 * @export
 * @interface RsRoundStateForPlayerFirstRound
 */
export interface RsRoundStateForPlayerFirstRound extends RsRoundStateForPlayer {
    /**
     * 
     * @type {{ [key: string]: Array<RsWizardCard>; }}
     * @memberof RsRoundStateForPlayerFirstRound
     */
    cardsOfOtherPlayers: { [key: string]: Array<RsWizardCard>; };
    /**
     * 
     * @type {boolean}
     * @memberof RsRoundStateForPlayerFirstRound
     */
    cmpLocalPlayerHasPlayedCard: boolean;
}



export function RsRoundStateForPlayerFirstRoundFromJSON(json: any): RsRoundStateForPlayerFirstRound {
    return RsRoundStateForPlayerFirstRoundFromJSONTyped(json, false);
}

export function RsRoundStateForPlayerFirstRoundFromJSONTyped(json: any, ignoreDiscriminator: boolean): RsRoundStateForPlayerFirstRound {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...RsRoundStateForPlayerFromJSONTyped(json, ignoreDiscriminator),
        'cardsOfOtherPlayers': json['cardsOfOtherPlayers'],
        'cmpLocalPlayerHasPlayedCard': json['cmpLocalPlayerHasPlayedCard'],
    };
}

export function RsRoundStateForPlayerFirstRoundToJSON(value?: RsRoundStateForPlayerFirstRound | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...RsRoundStateForPlayerToJSON(value),
        'cardsOfOtherPlayers': value.cardsOfOtherPlayers,
        'cmpLocalPlayerHasPlayedCard': value.cmpLocalPlayerHasPlayedCard,
    };
}

